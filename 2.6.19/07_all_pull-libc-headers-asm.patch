pull in the libc versions of these headers so that the proper
userspace defines/typedefs are utilized

--- a/include/asm-generic/siginfo.h
+++ b/include/asm-generic/siginfo.h
@@ -1,6 +1,10 @@
 #ifndef _ASM_GENERIC_SIGINFO_H
 #define _ASM_GENERIC_SIGINFO_H
 
+#ifndef __KERNEL__
+# include <signal.h>
+#else
+
 #include <linux/compiler.h>
 #include <linux/types.h>
 
@@ -267,7 +271,6 @@ typedef struct sigevent {
 #define sigev_notify_attributes	_sigev_un._sigev_thread._attribute
 #define sigev_notify_thread_id	 _sigev_un._tid
 
-#ifdef __KERNEL__
 
 struct siginfo;
 void do_schedule_next_timer(struct siginfo *info);
--- a/include/asm-x86_64/signal.h
+++ b/include/asm-x86_64/signal.h
@@ -27,8 +27,7 @@ typedef struct {
 #else
 /* Here we must cater to libcs that poke about in kernel headers.  */
 
-#define NSIG		32
-typedef unsigned long sigset_t;
+#include <signal.h>
 
 #endif /* __KERNEL__ */
 #endif
@@ -112,6 +112,7 @@ typedef unsigned long sigset_t;
 
 #include <asm-generic/signal.h>
 
+#ifdef __KERNEL__
 #ifndef __ASSEMBLY__
 
 struct sigaction {
@@ -131,7 +132,6 @@ typedef struct sigaltstack {
 	size_t ss_size;
 } stack_t;
 
-#ifdef __KERNEL__
 #include <asm/sigcontext.h>
 
 #undef __HAVE_ARCH_SIG_BITOPS
